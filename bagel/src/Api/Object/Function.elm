-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Function exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet Int Api.Object.Function
id =
    Object.selectionForField "Int" "id" [] Decode.int


name :
    SelectionSet decodesTo Api.Object.Token
    -> SelectionSet decodesTo Api.Object.Function
name object____ =
    Object.selectionForCompositeField "name" [] object____ Basics.identity


params :
    SelectionSet decodesTo Api.Object.Token
    -> SelectionSet (Maybe (List decodesTo)) Api.Object.Function
params object____ =
    Object.selectionForCompositeField "params" [] object____ (Basics.identity >> Decode.list >> Decode.nullable)


body :
    SelectionSet decodesTo Api.Interface.Stmt
    -> SelectionSet (Maybe (List decodesTo)) Api.Object.Function
body object____ =
    Object.selectionForCompositeField "body" [] object____ (Basics.identity >> Decode.list >> Decode.nullable)
