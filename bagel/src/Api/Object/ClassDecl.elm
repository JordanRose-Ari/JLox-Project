-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.ClassDecl exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet Int Api.Object.ClassDecl
id =
    Object.selectionForField "Int" "id" [] Decode.int


name :
    SelectionSet decodesTo Api.Object.Token
    -> SelectionSet decodesTo Api.Object.ClassDecl
name object____ =
    Object.selectionForCompositeField "name" [] object____ Basics.identity


superclass :
    SelectionSet decodesTo Api.Object.Variable
    -> SelectionSet (Maybe decodesTo) Api.Object.ClassDecl
superclass object____ =
    Object.selectionForCompositeField "superclass" [] object____ (Basics.identity >> Decode.nullable)


methods :
    SelectionSet decodesTo Api.Object.Function
    -> SelectionSet (List decodesTo) Api.Object.ClassDecl
methods object____ =
    Object.selectionForCompositeField "methods" [] object____ (Basics.identity >> Decode.list)
